#:tombi schema.strict = false

[settings]
# https://mise.jdx.dev/configuration/settings.html
activate_aggressive = true
idiomatic_version_file_enable_tools = [
  "go",
  "node",
  "opentofu",
  "python",
  "ruby",
  "terraform",
  "terragrunt",
]

[settings.pipx]
# https://mise.jdx.dev/dev-tools/backends/pipx.html
# use uvx instead of pipx
uvx = true

[settings.python]
# use precompiled binaries instead of building Python from source
# precompiled binaries are supported by Astral
# https://github.com/astral-sh/python-build-standalone
# https://mise.jdx.dev/lang/python.html#precompiled-python-binaries
compile = false

[tasks.check]
depends = ["prettier:check", "shellcheck", "shfmt:check", "tombi:check"]
description = "Run code quality checks"

[tasks.format]
depends = ["prettier:format", "shfmt:format", "tombi:format"]
description = "Run code formatters"

[tasks."prettier:check"]
description = "Check web code formatting with Prettier"
run = "prettier --check ."

[tasks."prettier:format"]
description = "Format web code with Prettier"
run = "prettier --write ."

[tasks.shellcheck]
description = "Check shell scripts with ShellCheck"
run = """
#!/usr/bin/env bash

shopt -s dotglob globstar nullglob
set -- **/*.{bash,sh}*
if [ -n "$1" ]; then
  printf "Found the following files:\n"
  printf "%s\n" "$@"
  shellcheck "$@"
else
  echo "No shell scripts for ShellCheck to check."
fi
"""

[tasks.shellcheck.env]
SHELLCHECK_OPTS = "-e SC1071 -e SC1090 -e SC1091"

[tasks."shfmt:check"]
description = "Check shell script formatting with shfmt"
run = """
# Checking shell script formatting with shfmt.
files=$(shfmt -f .)
if [ -n "$files" ]; then
  printf "Found the following files:\n%s\n" "$files"
  shfmt -d .
else
  echo "No shell scripts for shfmt to check."
fi
"""

[tasks."shfmt:format"]
description = "Format shell scripts with shfmt"
run = "shfmt -w ."

[tasks."tombi:check"]
description = "Check TOML formatting with Tombi"
run = """
#!/usr/bin/env bash

shopt -s dotglob globstar nullglob
tombi lint **/*.toml
"""

[tasks."tombi:format"]
description = "Format TOML files with Tombi"
run = """
#!/usr/bin/env bash

shopt -s dotglob globstar nullglob
tombi format **/*.toml
"""

[tools]
# https://mise.jdx.dev/configuration.html#scopes
# https://mise.jdx.dev/dev-tools/
#
# signature verification tools
cosign = "prefix:2"
slsa-verifier = "prefix:2"
# registry tools from core backend
go = "1"
node = [
  "22",
  "24",
]
python = [
  "3.12",
  "3.13",
]
ruby = "3"
rust = "latest"
# registry tools from other backends
amazon-ecr-credential-helper = "latest"
argocd = "prefix:3"
aws-iam-authenticator = "latest"
awscli = "prefix:2"
eksctl = "latest"
gh = "latest"
helm = "prefix:3"
jq = "latest"
k9s = "latest"
kubectl = "prefix:1"
minikube = "latest"
opa = "prefix:1"
opentofu = "prefix:1.10"
pipx = "prefix:1.7"
pnpm = "latest"
rclone = "latest"
regal = "latest"
ruff = "prefix:0.12"
shellcheck = "prefix:0.11"
shfmt = "prefix:3.12"
spacectl = "latest"
terraform-docs = "latest"
terragrunt = "latest"
uv = "prefix:0.8"
vault = "prefix:1.20"
yt-dlp = "latest"
# non-registry tools from specific backends
"npm:prettier" = "prefix:3"
"npm:typescript" = "prefix:5"
"pipx:basedpyright" = "prefix:1"
"pipx:crp" = "latest"
"pipx:hatch" = "prefix:1.14"
"pipx:httpie" = "prefix:3"
"pipx:tombi" = "prefix:0.5"
