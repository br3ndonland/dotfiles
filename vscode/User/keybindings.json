[
  // Toggle list using the Markdown All in One extension
  {
    "key": "ctrl+alt+l",
    "command": "markdown.extension.editing.toggleList",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  // Markdown anchor link
  {
    "key": "ctrl+alt+a",
    "command": "editor.action.insertSnippet",
    "args": {
      "langId": "markdown",
      "name": "Markdown HTML anchor link"
    },
    "when": "editorTextFocus && ['markdown', 'mdx'].includes(editorLangId)"
  },
  // Markdown details
  {
    "key": "ctrl+alt+d",
    "command": "editor.action.insertSnippet",
    "args": {
      "langId": "markdown",
      "name": "Markdown HTML details"
    },
    "when": "editorTextFocus && ['markdown', 'mdx'].includes(editorLangId)"
  },
  // Markdown images
  {
    "key": "ctrl+alt+i",
    "command": "editor.action.insertSnippet",
    "args": {
      "langId": "markdown",
      "name": "Markdown HTML img"
    },
    "when": "editorTextFocus && ['markdown', 'mdx'].includes(editorLangId)"
  },
  // Fix outdent issue with Markdown files
  {
    "key": "shift+tab",
    "command": "outdent",
    "when": "editorTextFocus && ['markdown', 'mdx'].includes(editorLangId)"
  },
  // Open links
  {
    "key": "ctrl+alt+cmd+enter",
    "command": "editor.action.openLink"
  },
  // Alternative command palette keybinding
  {
    "key": "alt+cmd+p",
    "command": "workbench.action.showCommands"
  },
  // Toggle side bar
  {
    "key": "alt+cmd+b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "alt+cmd+m",
    "command": "editor.emmet.action.matchTag"
  },
  // Switch to next editor
  {
    "key": "alt+cmd+right",
    "command": "workbench.action.nextEditor",
    "when": "editorFocus"
  },
  // Switch to previous editor
  {
    "key": "alt+cmd+left",
    "command": "workbench.action.previousEditor",
    "when": "editorFocus"
  },
  // Switch to next terminal
  {
    "key": "alt+cmd+right",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  // Switch to previous terminal
  {
    "key": "alt+cmd+left",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  // Fix terminal forward delete word
  {
    "key": "alt+delete",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001bd" },
    "when": "terminalFocus"
  },
  // Go to definition
  {
    "key": "ctrl+cmd+g",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // Go to references
  {
    "key": "ctrl+alt+cmd+g",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  // Search commits with GitLens
  {
    "key": "ctrl+alt+cmd+f",
    "command": "gitlens.showCommitSearch"
  },
  /*
    Prevent AI tools from co-opting keybindings
    -------------------------------------------

    The Cursor VSCode fork co-opts cmd+l to show the chat panel. This action
    was previously `cursor.showChatPanel` but is apparently not configurable
    anymore. After restoring VSCode's default cmd+l behavior, Cursor still
    shows the "Cmd+L to chat, Cmd+K to generate" code lens (tooltip). This
    behavior is also not configurable. The `"editor.codeLens": false` VSCode
    setting does not remove the Cursor code lens.
  */
  {
    "key": "cmd+l",
    "command": "expandLineSelection",
    "when": "textInputFocus"
  }
]
